<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item12" object-name="workflow:name=generic" id="9f6f81a3-988a-4d5c-9e15-8416ed330864" version="0.1.0" api-version="6.0.0" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Configure Drive Layout in vRA Deployment]]></display-name>
  <position y="50.0" x="60.0"/>
  <input>
    <param name="inputProperties" type="Properties"/>
  </input>
  <attrib name="postText" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="statusCode" type="number" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="contentLength" type="number" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="headers" type="Properties" read-only="false">
    <value encoded="n"><![CDATA[{}]]></value>
  </attrib>
  <attrib name="contentAsString" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="token" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="diskArray" type="Array" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="virtualMachineName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="UuidArray" type="Array" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="diskArray2" type="Array" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="virtualMachine" type="VC:VirtualMachine" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="commandsArray" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="result" type="Array/number" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="workingDirectory" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="environment" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="interactiveSession" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="vmUsername" type="string" read-only="false">
    <value encoded="n"><![CDATA[administrator]]></value>
  </attrib>
  <attrib name="programPath" type="string" read-only="false">
    <value encoded="n"><![CDATA[C:\Windows\system32\WindowsPowerShell\v1.0\powershell.exe]]></value>
  </attrib>
  <attrib name="username" type="string" read-only="false">
    <value encoded="n"><![CDATA[kadmin]]></value>
  </attrib>
  <attrib name="password" type="SecureString" read-only="false">
    <value encoded="n"><![CDATA[10BS21G57W45H6BU6FL39X31M38L6EM70TFA7EAC7YC1CB6FCJ11103E4N61509F9V9B9BD3EV8D7844BX1D49EFEKA4CE9DG6818646O782AA75T6F776D5I3CB4EA4S3E61B9EV7E90DD3YC667193LCF05461QF068BE5U6D59ED1YB0414F6Q2ADDE10P7982341QAD1D2D1R]]></value>
  </attrib>
  <attrib name="deploymentId" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="pollingRate" type="number" read-only="false">
    <value encoded="n"><![CDATA[5.0]]></value>
  </attrib>
  <attrib name="timeout" type="number" read-only="false">
    <value encoded="n"><![CDATA[3.0]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="190.0" x="600.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[REST Authentication]]></display-name>
    <script encoded="false"><![CDATA[var postText = "{\"username\":\"" + username + "\",\"password\":\"" + password + "\"}";

System.log("PostText is: " + postText);
]]></script>
    <in-binding>
      <bind name="username" type="string" export-name="username"/>
      <bind name="password" type="SecureString" export-name="password"/>
    </in-binding>
    <out-binding>
      <bind name="postText" type="string" export-name="postText"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="260.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item3" type="link" linked-workflow-id="cf424277-7abc-4904-9f26-e9a9ef769f43">
    <display-name><![CDATA[Get vRA cspAuthToken]]></display-name>
    <in-binding>
      <bind name="content" type="string" export-name="postText">
        <description><![CDATA[content]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="number" export-name="statusCode">
        <description><![CDATA[Response status code]]></description>
      </bind>
      <bind name="contentLength" type="number" export-name="contentLength">
        <description><![CDATA[Response content length]]></description>
      </bind>
      <bind name="headers" type="Properties" export-name="headers">
        <description><![CDATA[Response headers]]></description>
      </bind>
      <bind name="contentAsString" type="string" export-name="contentAsString">
        <description><![CDATA[Response content as string]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="60.0" x="380.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item4" type="task">
    <display-name><![CDATA[Parse cspAuthToken]]></display-name>
    <script encoded="false"><![CDATA[var jsonResponse = JSON.parse(contentAsString);

var token = jsonResponse.cspAuthToken

System.log("Token is: " + token);
]]></script>
    <in-binding>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
    </in-binding>
    <out-binding>
      <bind name="token" type="string" export-name="token"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="500.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item5" type="link" linked-workflow-id="61f99af5-3619-4f81-8ef4-0674fa75b028">
    <display-name><![CDATA[Get vRA Deployment Inputs]]></display-name>
    <in-binding>
      <bind name="deploymentId" type="string" export-name="deploymentId">
        <description><![CDATA[deploymentId]]></description>
      </bind>
      <bind name="cspAuthToken" type="string" export-name="token"/>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="number" export-name="statusCode">
        <description><![CDATA[Response status code]]></description>
      </bind>
      <bind name="contentLength" type="number" export-name="contentLength">
        <description><![CDATA[Response content length]]></description>
      </bind>
      <bind name="headers" type="Properties" export-name="headers">
        <description><![CDATA[Response headers]]></description>
      </bind>
      <bind name="contentAsString" type="string" export-name="contentAsString">
        <description><![CDATA[Response content as string]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="60.0" x="620.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item6" type="task">
    <display-name><![CDATA[Parse REST Response to Object]]></display-name>
    <script encoded="false"><![CDATA[var jsonResponse = JSON.parse(contentAsString);

var diskArray = new Array()

for each (diskProperty in jsonResponse.inputs.diskProperties) {
    diskArray.push(JSON.parse(JSON.stringify(diskProperty)))
}]]></script>
    <in-binding>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
    </in-binding>
    <out-binding>
      <bind name="diskArray" type="Array" export-name="diskArray"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="740.0"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item7" type="link" linked-workflow-id="06523bd4-23fd-47ba-81d1-484b692ff677">
    <display-name><![CDATA[Get vRA Deployment Resources]]></display-name>
    <in-binding>
      <bind name="deploymentId" type="string" export-name="deploymentId">
        <description><![CDATA[deploymentId]]></description>
      </bind>
      <bind name="cspAuthToken" type="string" export-name="token"/>
    </in-binding>
    <out-binding>
      <bind name="statusCode" type="number" export-name="statusCode">
        <description><![CDATA[Response status code]]></description>
      </bind>
      <bind name="contentLength" type="number" export-name="contentLength">
        <description><![CDATA[Response content length]]></description>
      </bind>
      <bind name="headers" type="Properties" export-name="headers">
        <description><![CDATA[Response headers]]></description>
      </bind>
      <bind name="contentAsString" type="string" export-name="contentAsString">
        <description><![CDATA[Response content as string]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="60.0" x="860.0"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item10" throw-bind-name="" type="task">
    <display-name><![CDATA[Parse REST Response to Object]]></display-name>
    <script encoded="false"><![CDATA[var jsonResponse = JSON.parse(contentAsString);
var content = jsonResponse.content;
var diskArray2 = new Array()

for each (var item in content) {
    if (JSON.stringify(item.type) == '"Cloud.vSphere.Disk"') {
        //System.log(JSON.stringify(item.properties.providerId));
        diskArray2.push(JSON.parse(JSON.stringify(item.properties)))
    }
    if (JSON.stringify(item.type) == '"Cloud.vSphere.Machine"') {
        var virtualMachineName = item.properties.resourceName
    }
}]]></script>
    <in-binding>
      <bind name="contentAsString" type="string" export-name="contentAsString"/>
    </in-binding>
    <out-binding>
      <bind name="virtualMachineName" type="string" export-name="virtualMachineName"/>
      <bind name="diskArray2" type="Array" export-name="diskArray2"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="980.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item13" type="task">
    <display-name><![CDATA[Genereate Disk Layout Commands]]></display-name>
    <script encoded="false"><![CDATA[var commandsArray = new Array();

for (var i = 0; i < (diskArray2.length); i += 1) {
    for each (device in UuidArray) {
        if (diskArray2[i].providerId == device.DiskObjectId) {
            var Uuid = String(device.Backing.Uuid).replace(/-/g,"");
            //var command = "-NoProfile -ExecutionPolicy Bypass -Command {Get-Disk -UniqueId " + Uuid + " | Initialize-Disk -PartitionStyle GPT -PassThru | New-Volume -FileSystem NTFS -DriveLetter " + diskArray[i].driveLetter + " -FriendlyName " + "'" + diskArray[i].driveLabel + "'" + " -UseMaximumSize}"
            var command = "-Command " + '"& ' + "{Get-Disk -UniqueId " + Uuid + " | Initialize-Disk -PartitionStyle GPT -PassThru | New-Partition -DriveLetter " + diskArray[i].driveLetter + " -UseMaximumSize | Format-Volume -FileSystem NTFS -NewFileSystemLabel " + "'" + diskArray[i].driveLabel + "'" + "}" + '"'
            commandsArray.push(command)
            System.log(command)
        }
    }
}]]></script>
    <in-binding>
      <bind name="UuidArray" type="Array" export-name="UuidArray"/>
      <bind name="diskArray" type="Array" export-name="diskArray"/>
      <bind name="diskArray2" type="Array" export-name="diskArray2"/>
    </in-binding>
    <out-binding>
      <bind name="commandsArray" type="Array/string" export-name="commandsArray"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="200.0" x="980.0"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item9" type="link" linked-workflow-id="4ea77f57-7833-4b39-97a1-68757168d892">
    <display-name><![CDATA[Get Virtual Machine DiskObjectId]]></display-name>
    <in-binding>
      <bind name="virtualMachine" type="string" export-name="virtualMachineName"/>
    </in-binding>
    <out-binding>
      <bind name="UuidArray" type="Array" export-name="UuidArray"/>
      <bind name="vm" type="VC:VirtualMachine" export-name="virtualMachine"/>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="120.0" x="980.0"/>
  </workflow-item>
  <workflow-item name="item11" out-name="item0" type="foreach">
    <display-name><![CDATA[Configure Drive Layout in Guest]]></display-name>
    <in-binding>
      <bind name="vmUsername" type="string" export-name="vmUsername">
        <description><![CDATA[Username for the virtual machine]]></description>
      </bind>
      <bind name="vmPassword" type="SecureString" export-name="password">
        <description><![CDATA[Password for the virtual machine]]></description>
      </bind>
      <bind name="vm" type="VC:VirtualMachine" export-name="virtualMachine">
        <description><![CDATA[Virtual machine]]></description>
      </bind>
      <bind name="interactiveSession" type="boolean" export-name="interactiveSession">
        <description><![CDATA[This is set to true if the client wants an interactive session in the guest.]]></description>
      </bind>
      <bind name="programPath" type="string" export-name="programPath">
        <description><![CDATA[The absolute path to the program to start. For Linux guest operating systems, /bin/bash is used to start the program.  For Solaris guest operating systems, /bin/bash is used to start the program if it exists. Otherwise /bin/sh is used. If /bin/sh is used, then the process ID returned will be that of the shell used to start the program, rather than the program itself, due to the differences in how /bin/sh and /bin/bash work. This PID will still be usable for watching the process with this API to find its exit code and elapsed time. ]]></description>
      </bind>
      <bind name="arguments" type="Array/string" export-name="*commandsArray">
        <description><![CDATA[The arguments to the program. In Linux and Solaris guest operating systems, the program will be executed by a guest shell. This allows stdio redirection, but may also require that characters which must be escaped to the shell also be escaped on the command line provided. For Windows guest operating systems, prefixing the command with "cmd /c" can provide stdio redirection. ]]></description>
      </bind>
      <bind name="workingDirectory" type="string" export-name="workingDirectory">
        <description><![CDATA[The absolute path of the working directory for the program to be run. VMware recommends explicitly setting the working directory for the program to be run. If this value is unset or is an empty string, the behavior depends on the guest operating system. For Linux guest operating systems, if this value is unset or is an empty string, the working directory will be the home directory of the user associated with the guest authentication. For other guest operating systems, if this value is unset, the behavior is unspecified. ]]></description>
      </bind>
      <bind name="environment" type="Array/string" export-name="environment">
        <description><![CDATA[An array of environment variables, specified in the guest OS notation (eg PATH=c:\bin;c:\windows\system32 or LD_LIBRARY_PATH=/usr/lib:/lib), to be set for the program being run. Note that these are not additions to the default environment variables; they define the complete set available to the program. If none are specified the values are guest dependent. ]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="result" type="Array/number" export-name="*result"/>
    </out-binding>
    <reference type="Workflow" id="C98080808080808080808080808080805E80808001322751030482b80adf61e7c"/>
    <position y="200.0" x="700.0"/>
  </workflow-item>
  <workflow-item name="item12" out-name="item1" type="task">
    <display-name><![CDATA[Parse Payload]]></display-name>
    <script encoded="false"><![CDATA[deploymentId = inputProperties.deploymentId]]></script>
    <in-binding>
      <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
    </in-binding>
    <out-binding>
      <bind name="deploymentId" type="string" export-name="deploymentId"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item13" out-name="item11" type="task" script-module="com.vmware.library.vc.vm.tools/vim3WaitToolsStarted">
    <display-name><![CDATA[vim3WaitToolsStarted]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
System.getModule("com.vmware.library.vc.vm.tools").vim3WaitToolsStarted(vm,pollingRate,timeout);
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="virtualMachine">
        <description><![CDATA[VM in which the action look to get the new DNS Name]]></description>
      </bind>
      <bind name="pollingRate" type="number" export-name="pollingRate">
        <description><![CDATA[Time between all request information on the tools [seconds]]]></description>
      </bind>
      <bind name="timeout" type="number" export-name="timeout">
        <description><![CDATA[Timeout before throwing a timeout exception [minutes]]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Add a note to the workflow schema.]]></description>
    <position y="200.0" x="840.0"/>
  </workflow-item>
  <presentation/>
</workflow>